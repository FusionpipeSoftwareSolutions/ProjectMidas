//35f1a6ffd1435c43c7e78264ca4c1439 Generated File. Do not edit.
// File created by WPP compiler version 0.01-Tue Jun 18 06:04:29 2013
// from template C:\Program Files (x86)\Windows Kits\8.1\bin\wppconfig\rev1\um-default.tpl

// template C:\Program Files (x86)\Windows Kits\8.1\bin\wppconfig\rev1\um-header.tpl
#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE queue_cpp

#ifndef WPP_ALREADY_INCLUDED

#define WPP_DLL 
#ifndef USER_MODE_NATIVE_ETW
#ifdef BUILD_MINWIN
#include <windowscore.h>
#else
#include <windows.h>
#endif
#endif

#include <wmistr.h>
#include <evntrace.h>
#ifndef WPP_TRACE_W2K_COMPATABILITY
#include <sddl.h>
#endif

#if defined(__cplusplus)
extern "C" {
#endif

#ifdef USER_MODE_NATIVE_ETW
#define WPP_USE_NTDLL_FUNCTIONS

typedef 
ULONG 
(__stdcall *WMIDPREQUEST)(
    _In_ WMIDPREQUESTCODE RequestCode,
    _In_ PVOID RequestContext,
    _Inout_ ULONG *BufferSize,
    _Inout_ PVOID Buffer
    );

typedef struct  _TRACE_GUID_REGISTRATION {
    LPCGUID Guid;            // Guid of data block being registered or updated.
    HANDLE RegHandle;        // Guid Registration Handle is returned.
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION;

#endif

// LEGACY: This structure was used by Win2k RpcRt4 and cluster tracing

typedef struct _WPP_WIN2K_CONTROL_BLOCK {
    TRACEHANDLE Logger;
    ULONG Flags;
    ULONG Level;
    LPCGUID ControlGuid;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK;

#pragma warning(push)
#pragma warning(disable:4201) // nonstandard extension used nameless struct/union

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    struct _WPP_TRACE_CONTROL_BLOCK *Next;
    TRACEHANDLE     UmRegistrationHandle;
    union {
        TRACEHANDLE              Logger;
        PWPP_WIN2K_CONTROL_BLOCK Win2kCb;
        PVOID                    Ptr;
        struct _WPP_TRACE_CONTROL_BLOCK *Cb;
    };
    
    UCHAR           FlagsLen; 
    UCHAR           Level; 
    USHORT          Options;
    ULONG           Flags[1];
    LPCGUID         ControlGuid;
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;
#pragma warning(pop)

#ifdef WPP_USE_NTDLL_FUNCTIONS

ULONG
__stdcall
EtwTraceMessage(
    _In_ TRACEHANDLE LoggerHandle,
    _In_ ULONG MessageFlags,
    _In_ LPCGUID MessageGuid,
    _In_ USHORT MessageNumber,
    ...
    );

TRACEHANDLE
__stdcall
EtwGetTraceLoggerHandle(
    _In_ PVOID Buffer
    );

UCHAR
__stdcall
EtwGetTraceEnableLevel(
    _In_ TRACEHANDLE LoggerHandle
    );

ULONG
__stdcall
EtwGetTraceEnableFlags(
    _In_ TRACEHANDLE LoggerHandle
    );

ULONG 
__stdcall
EtwRegisterTraceGuidsW(
    _In_ WMIDPREQUEST RequestAddress,
    _In_ PVOID RequestContext,
    _In_ LPCGUID ControlGuid,
    _In_ ULONG GuidCount,
    _In_ PTRACE_GUID_REGISTRATION GuidReg,
    _In_opt_ LPCWSTR MofImagePath,
    _In_opt_ LPCWSTR MofResourceName,
    _Out_ PTRACEHANDLE RegistrationHandle
    );

ULONG
__stdcall
EtwUnregisterTraceGuids(
    _In_ TRACEHANDLE RegistrationHandle
    );

#define WPP_TRACE                   EtwTraceMessage
#define WPP_GET_TRACE_LOGGER_HANDLE EtwGetTraceLoggerHandle
#define WPP_GET_TRACE_ENABLE_LEVEL  EtwGetTraceEnableLevel
#define WPP_GET_TRACE_ENABLE_FLAGS  EtwGetTraceEnableFlags
#define WPP_REGISTER_TRACE_GUIDS    EtwRegisterTraceGuidsW
#define WPP_UNREGISTER_TRACE_GUIDS  EtwUnregisterTraceGuids

#endif

#define WPP_IsValidSid IsValidSid
#define WPP_GetLengthSid GetLengthSid

#ifndef WPP_TRACE
#define WPP_TRACE TraceMessage
#endif

#ifndef WPP_UNREGISTER_TRACE_GUIDS
#define WPP_UNREGISTER_TRACE_GUIDS  UnregisterTraceGuids 
#endif


#ifndef WPP_REGISTER_TRACE_GUIDS 
#define WPP_REGISTER_TRACE_GUIDS  RegisterTraceGuids
#endif


#ifndef WPP_GET_TRACE_LOGGER_HANDLE
#define WPP_GET_TRACE_LOGGER_HANDLE  GetTraceLoggerHandle
#endif

#ifndef WPP_GET_TRACE_ENABLE_LEVEL 
#define WPP_GET_TRACE_ENABLE_LEVEL  GetTraceEnableLevel
#endif

#ifndef WPP_GET_TRACE_ENABLE_FLAGS 
#define WPP_GET_TRACE_ENABLE_FLAGS  GetTraceEnableFlags
#endif

enum {
    WPP_VER_WIN2K_CB_FORWARD_PTR    = 0x01,
    WPP_VER_WHISTLER_CB_FORWARD_PTR = 0x02,
    WPP_VER_LH_CB_FORWARD_PTR = 0x03
};

VOID WppCleanupUm( VOID );
#define WPP_CLEANUP() WppCleanupUm()

#define WppLoadTracingSupport 

//
// For getting private callback, implement a function with the signature below.
// To register the function: #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback
// If multiple control guids are used, be sure to compare Guid to the one of interest.
//

#if defined(WPP_PRIVATE_ENABLE_CALLBACK)

typedef
VOID
(NTAPI *PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ TRACEHANDLE Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level
    );  

#endif

//
// For generating CAPTURE_STATE callback (Win7+), implement a function with the signature
// below. To register the function: #define WPP_CAPTURE_STATE_CALLBACK MyCaptureStateCallback
// If multiple control guids are used, be sure to compare Guid to the one of interest.
//

#if defined(WPP_CAPTURE_STATE_CALLBACK)

typedef
VOID
(NTAPI *PFN_WPP_CAPTURE_STATE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ TRACEHANDLE Logger, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level
    );

#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

// template C:\Program Files (x86)\Windows Kits\8.1\bin\wppconfig\rev1\control.tpl
//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

// template C:\Program Files (x86)\Windows Kits\8.1\bin\wppconfig\rev1\tracemacro.tpl
//   expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1008
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1023
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1033
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1044
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1048
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1055
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1107
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1122
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1132
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1145
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1213
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1221
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1233
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1260
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1300
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1309
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1464
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1491
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1518
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1527
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1531
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1538
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1542
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp1554
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp216
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp412
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp423
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp434
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp473
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp480
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp489
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp535
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp545
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp576
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp593
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp646
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp653
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp663
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp676
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp686
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp704
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp774
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp789
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp799
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp809
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp813
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp838
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp844
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp850
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp898
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp905
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp915
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp928
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp938
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp948
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_queue_cpp956
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1008_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0SetOutputReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1008_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0SetOutputReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1008
    #define WPP_ANNOTATE_queue_cpp1008 WPP_ANNOTATE_queue_cpp1008_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1008 WPP_ANNOTATE_queue_cpp1008_FINAL("TMF:", "queue.cpp", "queue_cpp1008", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1023_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1023_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1023
    #define WPP_ANNOTATE_queue_cpp1023 WPP_ANNOTATE_queue_cpp1023_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1023 WPP_ANNOTATE_queue_cpp1023_FINAL("TMF:", "queue.cpp", "queue_cpp1023", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1033_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1033_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1033
    #define WPP_ANNOTATE_queue_cpp1033 WPP_ANNOTATE_queue_cpp1033_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1033 WPP_ANNOTATE_queue_cpp1033_FINAL("TMF:", "queue.cpp", "queue_cpp1033", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1044_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Expected report size: %10!I64d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1044_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0Expected report size: %10!I64d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1044
    #define WPP_ANNOTATE_queue_cpp1044 WPP_ANNOTATE_queue_cpp1044_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLongLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1044 WPP_ANNOTATE_queue_cpp1044_FINAL("TMF:", "queue.cpp", "queue_cpp1044", L"{", L"reportSize, ItemLongLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1048_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%!FUNC! Unexpected buffer size %10!I64d!, expected %11!I64d! %12!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1048_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%!FUNC! Unexpected buffer size %10!I64d!, expected %11!I64d! %12!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1048
    #define WPP_ANNOTATE_queue_cpp1048 WPP_ANNOTATE_queue_cpp1048_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLongLong -- 10" , L"Arg, ItemLongLong -- 11" , L"Arg, ItemHRESULT -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1048 WPP_ANNOTATE_queue_cpp1048_FINAL("TMF:", "queue.cpp", "queue_cpp1048", L"{", L"inBufferCb, ItemLongLong -- 10" , L"reportSize, ItemLongLong -- 11" , L"hr, ItemHRESULT -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1055_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Received %10!d! in output report\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1055_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0Received %10!d! in output report\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1055
    #define WPP_ANNOTATE_queue_cpp1055 WPP_ANNOTATE_queue_cpp1055_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1055 WPP_ANNOTATE_queue_cpp1055_FINAL("TMF:", "queue.cpp", "queue_cpp1055", L"{", L"reportBuffer->Data, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1107_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0WriteReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1107_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0WriteReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1107
    #define WPP_ANNOTATE_queue_cpp1107 WPP_ANNOTATE_queue_cpp1107_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1107 WPP_ANNOTATE_queue_cpp1107_FINAL("TMF:", "queue.cpp", "queue_cpp1107", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1122_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1122_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1122
    #define WPP_ANNOTATE_queue_cpp1122 WPP_ANNOTATE_queue_cpp1122_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1122 WPP_ANNOTATE_queue_cpp1122_FINAL("TMF:", "queue.cpp", "queue_cpp1122", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1132_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1132_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1132
    #define WPP_ANNOTATE_queue_cpp1132 WPP_ANNOTATE_queue_cpp1132_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1132 WPP_ANNOTATE_queue_cpp1132_FINAL("TMF:", "queue.cpp", "queue_cpp1132", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1145_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%!FUNC! Unexpected buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1145_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%!FUNC! Unexpected buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1145
    #define WPP_ANNOTATE_queue_cpp1145 WPP_ANNOTATE_queue_cpp1145_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1145 WPP_ANNOTATE_queue_cpp1145_FINAL("TMF:", "queue.cpp", "queue_cpp1145", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1213_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0GetIndexedString\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1213_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0GetIndexedString\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1213
    #define WPP_ANNOTATE_queue_cpp1213 WPP_ANNOTATE_queue_cpp1213_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1213 WPP_ANNOTATE_queue_cpp1213_FINAL("TMF:", "queue.cpp", "queue_cpp1213", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1221_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1221_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1221
    #define WPP_ANNOTATE_queue_cpp1221 WPP_ANNOTATE_queue_cpp1221_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1221 WPP_ANNOTATE_queue_cpp1221_FINAL("TMF:", "queue.cpp", "queue_cpp1221", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1233_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0%!FUNC! Unexpected input buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1233_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0%!FUNC! Unexpected input buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1233
    #define WPP_ANNOTATE_queue_cpp1233 WPP_ANNOTATE_queue_cpp1233_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1233 WPP_ANNOTATE_queue_cpp1233_FINAL("TMF:", "queue.cpp", "queue_cpp1233", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1260_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0%!FUNC! Unexpected string index %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1260_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0%!FUNC! Unexpected string index %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1260
    #define WPP_ANNOTATE_queue_cpp1260 WPP_ANNOTATE_queue_cpp1260_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1260 WPP_ANNOTATE_queue_cpp1260_FINAL("TMF:", "queue.cpp", "queue_cpp1260", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1300_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1300_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1300
    #define WPP_ANNOTATE_queue_cpp1300 WPP_ANNOTATE_queue_cpp1300_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1300 WPP_ANNOTATE_queue_cpp1300_FINAL("TMF:", "queue.cpp", "queue_cpp1300", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1309_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC! Unexpected output buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1309_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC! Unexpected output buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1309
    #define WPP_ANNOTATE_queue_cpp1309 WPP_ANNOTATE_queue_cpp1309_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1309 WPP_ANNOTATE_queue_cpp1309_FINAL("TMF:", "queue.cpp", "queue_cpp1309", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1464_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%!FUNC!: Could not create manual I/O queue, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1464_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%!FUNC!: Could not create manual I/O queue, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1464
    #define WPP_ANNOTATE_queue_cpp1464 WPP_ANNOTATE_queue_cpp1464_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1464 WPP_ANNOTATE_queue_cpp1464_FINAL("TMF:", "queue.cpp", "queue_cpp1464", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1491_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Failed to allocate timer %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1491_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0Failed to allocate timer %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1491
    #define WPP_ANNOTATE_queue_cpp1491 WPP_ANNOTATE_queue_cpp1491_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1491 WPP_ANNOTATE_queue_cpp1491_FINAL("TMF:", "queue.cpp", "queue_cpp1491", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1518_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0_TimerCallback CMyQueue 0x%10!p!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1518_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0_TimerCallback CMyQueue 0x%10!p!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1518
    #define WPP_ANNOTATE_queue_cpp1518 WPP_ANNOTATE_queue_cpp1518_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1518 WPP_ANNOTATE_queue_cpp1518_FINAL("TMF:", "queue.cpp", "queue_cpp1518", L"{", L"This, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1527_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0retrieved read request from manual queue CMyManualQueue 0x%10!p!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1527_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0retrieved read request from manual queue CMyManualQueue 0x%10!p!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1527
    #define WPP_ANNOTATE_queue_cpp1527 WPP_ANNOTATE_queue_cpp1527_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1527 WPP_ANNOTATE_queue_cpp1527_FINAL("TMF:", "queue.cpp", "queue_cpp1527", L"{", L"This, ItemPtr -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1531_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0QueryInterface failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1531_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0QueryInterface failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1531
    #define WPP_ANNOTATE_queue_cpp1531 WPP_ANNOTATE_queue_cpp1531_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1531 WPP_ANNOTATE_queue_cpp1531_FINAL("TMF:", "queue.cpp", "queue_cpp1531", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1538_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0EffectiveIoType: %10!d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1538_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0EffectiveIoType: %10!d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1538
    #define WPP_ANNOTATE_queue_cpp1538 WPP_ANNOTATE_queue_cpp1538_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1538 WPP_ANNOTATE_queue_cpp1538_FINAL("TMF:", "queue.cpp", "queue_cpp1538", L"{", L"fxRequest2->GetEffectiveIoType(), ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1542_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1542_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1542
    #define WPP_ANNOTATE_queue_cpp1542 WPP_ANNOTATE_queue_cpp1542_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1542 WPP_ANNOTATE_queue_cpp1542_FINAL("TMF:", "queue.cpp", "queue_cpp1542", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp1554_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%!FUNC! Insufficient read report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp1554_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%!FUNC! Insufficient read report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp1554
    #define WPP_ANNOTATE_queue_cpp1554 WPP_ANNOTATE_queue_cpp1554_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp1554 WPP_ANNOTATE_queue_cpp1554_FINAL("TMF:", "queue.cpp", "queue_cpp1554", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp216_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0%!FUNC!: Could not create default I/O queue, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp216_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0%!FUNC!: Could not create default I/O queue, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp216
    #define WPP_ANNOTATE_queue_cpp216 WPP_ANNOTATE_queue_cpp216_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp216 WPP_ANNOTATE_queue_cpp216_FINAL("TMF:", "queue.cpp", "queue_cpp216", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp412_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp412_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp412
    #define WPP_ANNOTATE_queue_cpp412 WPP_ANNOTATE_queue_cpp412_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp412 WPP_ANNOTATE_queue_cpp412_FINAL("TMF:", "queue.cpp", "queue_cpp412", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp423_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0%!FUNC! desriptor length is zero %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp423_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0%!FUNC! desriptor length is zero %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp423
    #define WPP_ANNOTATE_queue_cpp423 WPP_ANNOTATE_queue_cpp423_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp423 WPP_ANNOTATE_queue_cpp423_FINAL("TMF:", "queue.cpp", "queue_cpp423", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp434_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0%!FUNC! Buffer copy failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp434_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0%!FUNC! Buffer copy failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp434
    #define WPP_ANNOTATE_queue_cpp434 WPP_ANNOTATE_queue_cpp434_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp434 WPP_ANNOTATE_queue_cpp434_FINAL("TMF:", "queue.cpp", "queue_cpp434", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp473_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp473_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp473
    #define WPP_ANNOTATE_queue_cpp473 WPP_ANNOTATE_queue_cpp473_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp473 WPP_ANNOTATE_queue_cpp473_FINAL("TMF:", "queue.cpp", "queue_cpp473", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp480_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Incorrect buffer size received %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp480_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Incorrect buffer size received %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp480
    #define WPP_ANNOTATE_queue_cpp480 WPP_ANNOTATE_queue_cpp480_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp480 WPP_ANNOTATE_queue_cpp480_FINAL("TMF:", "queue.cpp", "queue_cpp480", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp489_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0%!FUNC! Buffer copy failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp489_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0%!FUNC! Buffer copy failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp489
    #define WPP_ANNOTATE_queue_cpp489 WPP_ANNOTATE_queue_cpp489_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp489 WPP_ANNOTATE_queue_cpp489_FINAL("TMF:", "queue.cpp", "queue_cpp489", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp535_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp535_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp535
    #define WPP_ANNOTATE_queue_cpp535 WPP_ANNOTATE_queue_cpp535_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp535 WPP_ANNOTATE_queue_cpp535_FINAL("TMF:", "queue.cpp", "queue_cpp535", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp545_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0%!FUNC! Insufficient HID attributes buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp545_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0%!FUNC! Insufficient HID attributes buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp545
    #define WPP_ANNOTATE_queue_cpp545 WPP_ANNOTATE_queue_cpp545_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp545 WPP_ANNOTATE_queue_cpp545_FINAL("TMF:", "queue.cpp", "queue_cpp545", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp576_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0*** Setting the timer ***\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp576_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0*** Setting the timer ***\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp576
    #define WPP_ANNOTATE_queue_cpp576 WPP_ANNOTATE_queue_cpp576_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp576 WPP_ANNOTATE_queue_cpp576_FINAL("TMF:", "queue.cpp", "queue_cpp576", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp593_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0%!FUNC! ForwardToIoQueue returned failure %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp593_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0%!FUNC! ForwardToIoQueue returned failure %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp593
    #define WPP_ANNOTATE_queue_cpp593 WPP_ANNOTATE_queue_cpp593_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp593 WPP_ANNOTATE_queue_cpp593_FINAL("TMF:", "queue.cpp", "queue_cpp593", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp646_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0GetFeature\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp646_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0GetFeature\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp646
    #define WPP_ANNOTATE_queue_cpp646 WPP_ANNOTATE_queue_cpp646_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp646 WPP_ANNOTATE_queue_cpp646_FINAL("TMF:", "queue.cpp", "queue_cpp646", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp653_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp653_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0RetrieveINputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp653
    #define WPP_ANNOTATE_queue_cpp653 WPP_ANNOTATE_queue_cpp653_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp653 WPP_ANNOTATE_queue_cpp653_FINAL("TMF:", "queue.cpp", "queue_cpp653", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp663_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0%!FUNC! Insufficient buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp663_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0%!FUNC! Insufficient buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp663
    #define WPP_ANNOTATE_queue_cpp663 WPP_ANNOTATE_queue_cpp663_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp663 WPP_ANNOTATE_queue_cpp663_FINAL("TMF:", "queue.cpp", "queue_cpp663", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp676_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Unexpected request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp676_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Unexpected request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp676
    #define WPP_ANNOTATE_queue_cpp676 WPP_ANNOTATE_queue_cpp676_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp676 WPP_ANNOTATE_queue_cpp676_FINAL("TMF:", "queue.cpp", "queue_cpp676", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp686_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp686_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp686
    #define WPP_ANNOTATE_queue_cpp686 WPP_ANNOTATE_queue_cpp686_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp686 WPP_ANNOTATE_queue_cpp686_FINAL("TMF:", "queue.cpp", "queue_cpp686", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp704_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%!FUNC! Insufficient report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp704_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0%!FUNC! Insufficient report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp704
    #define WPP_ANNOTATE_queue_cpp704 WPP_ANNOTATE_queue_cpp704_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp704 WPP_ANNOTATE_queue_cpp704_FINAL("TMF:", "queue.cpp", "queue_cpp704", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp774_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0SetFeature\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp774_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0SetFeature\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp774
    #define WPP_ANNOTATE_queue_cpp774 WPP_ANNOTATE_queue_cpp774_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp774 WPP_ANNOTATE_queue_cpp774_FINAL("TMF:", "queue.cpp", "queue_cpp774", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp789_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp789_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0Unknown request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp789
    #define WPP_ANNOTATE_queue_cpp789 WPP_ANNOTATE_queue_cpp789_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp789 WPP_ANNOTATE_queue_cpp789_FINAL("TMF:", "queue.cpp", "queue_cpp789", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp799_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp799_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp799
    #define WPP_ANNOTATE_queue_cpp799 WPP_ANNOTATE_queue_cpp799_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp799 WPP_ANNOTATE_queue_cpp799_FINAL("TMF:", "queue.cpp", "queue_cpp799", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp809_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Expected report size: %10!I64d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp809_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0Expected report size: %10!I64d!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp809
    #define WPP_ANNOTATE_queue_cpp809 WPP_ANNOTATE_queue_cpp809_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLongLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp809 WPP_ANNOTATE_queue_cpp809_FINAL("TMF:", "queue.cpp", "queue_cpp809", L"{", L"reportSize, ItemLongLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp813_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0%!FUNC! Unexpected buffer size %10!I64d!, expected %11!I64d! %12!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp813_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0%!FUNC! Unexpected buffer size %10!I64d!, expected %11!I64d! %12!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp813
    #define WPP_ANNOTATE_queue_cpp813 WPP_ANNOTATE_queue_cpp813_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLongLong -- 10" , L"Arg, ItemLongLong -- 11" , L"Arg, ItemHRESULT -- 12" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp813 WPP_ANNOTATE_queue_cpp813_FINAL("TMF:", "queue.cpp", "queue_cpp813", L"{", L"inBufferCb, ItemLongLong -- 10" , L"reportSize, ItemLongLong -- 11" , L"hr, ItemHRESULT -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp838_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Control Code HIDMINI_CONTROL_CODE_DUMMY1\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp838_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0Control Code HIDMINI_CONTROL_CODE_DUMMY1\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp838
    #define WPP_ANNOTATE_queue_cpp838 WPP_ANNOTATE_queue_cpp838_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp838 WPP_ANNOTATE_queue_cpp838_FINAL("TMF:", "queue.cpp", "queue_cpp838", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp844_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Control Code HIDMINI_CONTROL_CODE_DUMMY2\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp844_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0Control Code HIDMINI_CONTROL_CODE_DUMMY2\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp844
    #define WPP_ANNOTATE_queue_cpp844 WPP_ANNOTATE_queue_cpp844_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp844 WPP_ANNOTATE_queue_cpp844_FINAL("TMF:", "queue.cpp", "queue_cpp844", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp850_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Unknown control Code\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp850_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Unknown control Code\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp850
    #define WPP_ANNOTATE_queue_cpp850 WPP_ANNOTATE_queue_cpp850_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp850 WPP_ANNOTATE_queue_cpp850_FINAL("TMF:", "queue.cpp", "queue_cpp850", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp898_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0GetInputReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp898_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0GetInputReport\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp898
    #define WPP_ANNOTATE_queue_cpp898 WPP_ANNOTATE_queue_cpp898_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp898 WPP_ANNOTATE_queue_cpp898_FINAL("TMF:", "queue.cpp", "queue_cpp898", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp905_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp905_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0RetrieveInputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp905
    #define WPP_ANNOTATE_queue_cpp905 WPP_ANNOTATE_queue_cpp905_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp905 WPP_ANNOTATE_queue_cpp905_FINAL("TMF:", "queue.cpp", "queue_cpp905", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp915_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%!FUNC! Insufficient buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp915_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0%!FUNC! Insufficient buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp915
    #define WPP_ANNOTATE_queue_cpp915 WPP_ANNOTATE_queue_cpp915_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp915 WPP_ANNOTATE_queue_cpp915_FINAL("TMF:", "queue.cpp", "queue_cpp915", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp928_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Unexpected request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp928_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0Unexpected request, %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp928
    #define WPP_ANNOTATE_queue_cpp928 WPP_ANNOTATE_queue_cpp928_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp928 WPP_ANNOTATE_queue_cpp928_FINAL("TMF:", "queue.cpp", "queue_cpp928", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp938_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp938_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0RetrieveOutputMemory failed %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp938
    #define WPP_ANNOTATE_queue_cpp938 WPP_ANNOTATE_queue_cpp938_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp938 WPP_ANNOTATE_queue_cpp938_FINAL("TMF:", "queue.cpp", "queue_cpp938", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp948_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0%!FUNC! Insufficient report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp948_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0%!FUNC! Insufficient report buffer size %10!s!\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_ERROR" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp948
    #define WPP_ANNOTATE_queue_cpp948 WPP_ANNOTATE_queue_cpp948_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemHRESULT -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp948 WPP_ANNOTATE_queue_cpp948_FINAL("TMF:", "queue.cpp", "queue_cpp948", L"{", L"hr, ItemHRESULT -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_queue_cpp956_FINAL(P, File, Name, ...)    __annotation(L ## P, L"ffa6f135-43d1-435c-c7e7-8264ca4c1439 driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Returning %10!d! in input report\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_queue_cpp956_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"driver // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0Returning %10!d! in input report\" //   FLAG=MYDRIVER_ALL_INFO LEVEL=TRACE_LEVEL_INFORMATION" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_queue_cpp956
    #define WPP_ANNOTATE_queue_cpp956 WPP_ANNOTATE_queue_cpp956_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")
                                        
    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_queue_cpp956 WPP_ANNOTATE_queue_cpp956_FINAL("TMF:", "queue.cpp", "queue_cpp956", L"{", L"m_OutputReport, ItemLong -- 10" , L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_ffa6f13543d1435cc7e78264ca4c1439_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0xffa6f135,0x43d1,0x435c,{0xc7,0xe7,0x82,0x64,0xca,0x4c,0x14,0x39}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif


#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif

#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif

#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (_value)?(((_value)[0] == 0)?7 * sizeof(WCHAR):(wcslen(_value) + 1)* sizeof(WCHAR)):5 * sizeof(WCHAR), (_value)?(((_value)[0] == 0) ? L"<NULL>" : (_value)):L"NULL")
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x && (*(_x)).Length)? &(*(_x)).Length : L"\5")\
                          WPP_LOGPAIR( (_x && (*(_x)).Buffer)?(*(_x)).Length:5*sizeof(WCHAR), (_x && (*(_x)).Buffer)?(*(_x)).Buffer:L"NULL")
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x && (*(_x)).Length)? &(*(_x)).Length : L"\5")\
                          WPP_LOGPAIR( (_x && (*(_x)).Buffer)?(*(_x)).Length:5*sizeof(char), (_x && (*(_x)).Buffer)?((const char *)(*(_x)).Buffer):"NULL")
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) && 
#endif


#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  0); }
#endif  // #ifndef WPP_SF__def
#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  0); }
#endif  // #ifndef WPP_SF_d_def
#ifndef WPP_SF_i_def
#       define WPP_SF_i_def
WPP_INLINE void WPP_SF_i(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed __int64 _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed __int64,_a1)  0); }
#endif  // #ifndef WPP_SF_i_def
#ifndef WPP_SF_iid_def
#       define WPP_SF_iid_def
WPP_INLINE void WPP_SF_iid(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed __int64 _a1, signed __int64 _a2, signed int _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed __int64,_a1) WPP_LOGTYPEVAL(signed __int64,_a2) WPP_LOGTYPEVAL(signed int,_a3)  0); }
#endif  // #ifndef WPP_SF_iid_def
#ifndef WPP_SF_q_def
#       define WPP_SF_q_def
WPP_INLINE void WPP_SF_q(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1)  0); }
#endif  // #ifndef WPP_SF_q_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif      

#ifdef WPP_DEBUG
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1008(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1008) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 42, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1023(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1023) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 43, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1033(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1033) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 44, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1044(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1044) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_i(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 45, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1048(LEVEL, MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10,a11,a12)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1048) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_iid(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 46, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1055(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1055) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 47, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1107(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1107) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 48, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1122(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1122) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 49, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1132(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1132) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 50, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1145(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1145) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 51, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1213(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1213) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 52, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1221(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1221) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 53, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1233(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1233) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 54, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1260(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1260) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 55, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1300(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1300) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 56, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1309(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1309) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 57, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1464(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1464) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 58, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1491(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1491) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 59, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1518(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1518) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_q(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 60, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1527(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1527) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_q(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 61, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1531(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1531) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 62, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1538(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1538) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 63, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1542(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1542) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 64, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1554(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1554) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 65, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp216(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp216) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 10, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp412(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp412) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 11, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp423(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp423) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 12, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp434(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp434) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 13, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp473(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp473) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 14, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp480(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp480) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 15, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp489(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp489) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 16, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp535(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp535) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 17, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp545(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp545) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 18, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp576(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp576) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 19, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp593(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp593) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 20, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp646(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp646) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 21, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp653(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp653) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 22, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp663(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp663) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 23, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp676(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp676) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 24, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp686(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp686) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 25, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp704(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp704) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 26, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp774(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp774) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 27, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp789(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp789) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 28, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp799(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp799) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 29, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp809(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp809) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_i(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 30, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp813(LEVEL, MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10,a11,a12)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp813) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10,a11,a12)), \
          WPP_SF_iid(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 31, \
                             WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp838(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp838) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 32, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp844(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp844) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 33, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp850(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp850) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 34, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp898(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp898) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG)), \
          WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 35, \
                             WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp905(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp905) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 36, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp915(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp915) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 37, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp928(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp928) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 38, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp938(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp938) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 39, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp948(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp948) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 40, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp956(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10)\
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp956) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
          WPP_DEBUG((MSG,a10)), \
          WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 41, \
                             WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#else
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1008(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1008) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 42, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1023(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1023) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 43, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1033(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1033) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 44, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1044(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1044) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_i(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 45, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1048(LEVEL, MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10,a11,a12) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1048) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_iid(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 46, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1055(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1055) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 47, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1107(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1107) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 48, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1122(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1122) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 49, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1132(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1132) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 50, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1145(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1145) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 51, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1213(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1213) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 52, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1221(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1221) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 53, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1233(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1233) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 54, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1260(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1260) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 55, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1300(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1300) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 56, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1309(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1309) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 57, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1464(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1464) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 58, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1491(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1491) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 59, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1518(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1518) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_q(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 60, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1527(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1527) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_q(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 61, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1531(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1531) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 62, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1538(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1538) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 63, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1542(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1542) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 64, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp1554(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp1554) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 65, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp216(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp216) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 10, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp412(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp412) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 11, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp423(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp423) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 12, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp434(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp434) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 13, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp473(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp473) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 14, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp480(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp480) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 15, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp489(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp489) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 16, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp535(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp535) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 17, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp545(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp545) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 18, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp576(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp576) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 19, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp593(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp593) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 20, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp646(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp646) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 21, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp653(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp653) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 22, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp663(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp663) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 23, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp676(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp676) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 24, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp686(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp686) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 25, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp704(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp704) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 26, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp774(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp774) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 27, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp789(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp789) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 28, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp799(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp799) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 29, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp809(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp809) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_i(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 30, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp813(LEVEL, MSG,a10,a11,a12) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10,a11,a12) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp813) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_iid(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 31, \
                               WPP_LOCAL_TraceGuids+0, a10, a11, a12), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp838(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp838) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 32, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp844(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp844) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 33, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp850(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp850) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 34, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp898(LEVEL, MSG) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp898) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 35, \
                               WPP_LOCAL_TraceGuids+0), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp905(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp905) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 36, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp915(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp915) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 37, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp928(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp928) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 38, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp938(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp938) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 39, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp948(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp948) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 40, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#ifndef WPP_FLAG_LEVEL_POST
#  define WPP_FLAG_LEVEL_POST(FLAG,LEVEL)
#endif
#ifndef WPP_FLAG_LEVEL_PRE
#  define WPP_FLAG_LEVEL_PRE(FLAG,LEVEL)
#endif
#define WPP_CALL_queue_cpp956(LEVEL, MSG,a10) \
     WPP_LOG_ALWAYS(WPP_EX_FLAG_LEVEL(MYDRIVER_ALL_INFO, LEVEL),MSG,a10) \
     WPP_FLAG_LEVEL_PRE(MYDRIVER_ALL_INFO, LEVEL) \
     WPP_ANNOTATE(queue_cpp956) \
     ( ( \
         WPP_CHECK_INIT WPP_FLAG_LEVEL_ENABLED(MYDRIVER_ALL_INFO, LEVEL) ? \
            WPP_SF_d(WPP_FLAG_LEVEL_LOGGER(MYDRIVER_ALL_INFO, LEVEL) 41, \
                               WPP_LOCAL_TraceGuids+0, a10), 1:0  \
     ) ) \
     WPP_FLAG_LEVEL_POST(MYDRIVER_ALL_INFO, LEVEL)
#endif


#ifdef WPP_DEBUG
#else
#endif



#if defined(__cplusplus)
};
#endif


#pragma once

#ifdef WPP_ETW_PROVIDER

#include <wmistr.h>
#include <evntrace.h>
#include "evntprov.h"


#if !defined(ETW_INLINE)
#define ETW_INLINE DECLSPEC_NOINLINE __inline
#endif

#if defined(__cplusplus)
extern "C" {
#endif


#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION
#if  !defined(McGenDebug)
#define McGenDebug(a,b)
#endif 


#if !defined(MCGEN_TRACE_CONTEXT_DEF)
#define MCGEN_TRACE_CONTEXT_DEF
typedef struct _MCGEN_TRACE_CONTEXT
{
    TRACEHANDLE     RegistrationHandle;
    TRACEHANDLE     Logger;
    ULONGLONG       MatchAnyKeyword;
    ULONGLONG       MatchAllKeyword;
    ULONG           Flags;
    ULONG           IsEnabled;
    UCHAR           Level; 
    UCHAR           Reserve;
} MCGEN_TRACE_CONTEXT, *PMCGEN_TRACE_CONTEXT;
#endif

#if !defined(MCGEN_EVENT_ENABLED_DEF)
#define MCGEN_EVENT_ENABLED_DEF
FORCEINLINE
BOOLEAN
McGenEventEnabled(
    __in PMCGEN_TRACE_CONTEXT EnableInfo,
    __in PCEVENT_DESCRIPTOR EventDescriptor
    )
{
    //
    // Check if the event Level is lower than the level at which
    // the channel is enabled.
    // If the event Level is 0 or the channel is enabled at level 0,
    // all levels are enabled.
    //

    if ((EventDescriptor->Level <= EnableInfo->Level) || // This also covers the case of Level == 0.
        (EnableInfo->Level == 0)) {

        //
        // Check if Keyword is enabled
        //

        if ((EventDescriptor->Keyword == (ULONGLONG)0) ||
            ((EventDescriptor->Keyword & EnableInfo->MatchAnyKeyword) &&
             ((EventDescriptor->Keyword & EnableInfo->MatchAllKeyword) == EnableInfo->MatchAllKeyword))) {

            return TRUE;
        }
    }
    return FALSE;
}
#endif


//
// EnableCheckMacro
//
#ifndef MCGEN_ENABLE_CHECK
#define MCGEN_ENABLE_CHECK(Context, Descriptor) (Context.IsEnabled &&  McGenEventEnabled(&Context, &Descriptor))
#endif

#if !defined(MCGEN_CONTROL_CALLBACK)
#define MCGEN_CONTROL_CALLBACK

DECLSPEC_NOINLINE __inline
VOID
__stdcall
McGenControlCallbackV2(
    __in LPCGUID SourceId,
    __in ULONG ControlCode,
    __in UCHAR Level,
    __in ULONGLONG MatchAnyKeyword,
    __in ULONGLONG MatchAllKeyword,
    __in_opt PEVENT_FILTER_DESCRIPTOR FilterData,
    __inout_opt PVOID CallbackContext
    )
/*++

Routine Description:

    This is the notification callback for Vista.

Arguments:

    SourceId - The GUID that identifies the session that enabled the provider. 

    ControlCode - The parameter indicates whether the provider 
                  is being enabled or disabled.

    Level - The level at which the event is enabled.

    MatchAnyKeyword - The bitmask of keywords that the provider uses to 
                      determine the category of events that it writes.

    MatchAllKeyword - This bitmask additionally restricts the category 
                      of events that the provider writes. 

    FilterData - The provider-defined data.

    CallbackContext - The context of the callback that is defined when the provider 
                      called EtwRegister to register itself.

Remarks:

    ETW calls this function to notify provider of enable/disable

--*/
{
    PMCGEN_TRACE_CONTEXT Ctx = (PMCGEN_TRACE_CONTEXT)CallbackContext;
#ifndef MCGEN_PRIVATE_ENABLE_CALLBACK_V2
    UNREFERENCED_PARAMETER(SourceId);
    UNREFERENCED_PARAMETER(FilterData);
#endif

    if (Ctx == NULL) {
        return;
    }

    switch (ControlCode) {

        case EVENT_CONTROL_CODE_ENABLE_PROVIDER:
            Ctx->Level = Level;
            Ctx->MatchAnyKeyword = MatchAnyKeyword;
            Ctx->MatchAllKeyword = MatchAllKeyword;
            Ctx->IsEnabled = EVENT_CONTROL_CODE_ENABLE_PROVIDER;
            break;

        case EVENT_CONTROL_CODE_DISABLE_PROVIDER:
            Ctx->IsEnabled = EVENT_CONTROL_CODE_DISABLE_PROVIDER;
            Ctx->Level = 0;
            Ctx->MatchAnyKeyword = 0;
            Ctx->MatchAllKeyword = 0;
            break;
 
        default:
            break;
    }

#ifdef MCGEN_PRIVATE_ENABLE_CALLBACK_V2
    //
    // Call user defined callback
    //
    MCGEN_PRIVATE_ENABLE_CALLBACK_V2(
        SourceId,
        ControlCode,
        Level,
        MatchAnyKeyword,
        MatchAllKeyword,
        FilterData,
        CallbackContext
        );
#endif
   
    return;
}

#endif
#endif // MCGEN_DISABLE_PROVIDER_CODE_GENERATION


EXTERN_C __declspec(selectany) const GUID ;// = {0x00000000, 0x0000, 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

#define _CHANNEL_C1 0x9

#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION


EXTERN_C __declspec(selectany) REGHANDLE Handle;// = (REGHANDLE)0;

EXTERN_C __declspec(selectany) MCGEN_TRACE_CONTEXT _Context;// = {0};

#if !defined(McGenEventRegisterUnregister)
#define McGenEventRegisterUnregister
DECLSPEC_NOINLINE __inline
ULONG __stdcall
McGenEventRegister(
    __in LPCGUID ProviderId,
    __in_opt PENABLECALLBACK EnableCallback,
    __in_opt PVOID CallbackContext,
    __inout PREGHANDLE RegHandle
    )
/*++

Routine Description:

    This function register the provider with ETW USER mode.

Arguments:
    ProviderId - Provider Id to be register with ETW.

    EnableCallback - Callback to be used.

    CallbackContext - Context for this provider.

    RegHandle - Pointer to Registration handle.

Remarks:

    If the handle != NULL will return ERROR_SUCCESS

--*/
{
    ULONG Error;


    if (*RegHandle) {
        //
        // already registered
        //
        return ERROR_SUCCESS;
    }

    Error = EventRegister( ProviderId, EnableCallback, CallbackContext, RegHandle); 

    return Error;
}


DECLSPEC_NOINLINE __inline
ULONG __stdcall
McGenEventUnregister(__inout PREGHANDLE RegHandle)
/*++

Routine Description:

    Unregister from ETW USER mode

Arguments:
            RegHandle this is the pointer to the provider context
Remarks:
            If Provider has not register RegHandle = NULL,
            return ERROR_SUCCESS
--*/
{
    ULONG Error;


    if(!(*RegHandle)) {
        //
        // Provider has not registerd
        //
        return ERROR_SUCCESS;
    }

    Error = EventUnregister(*RegHandle); 
    *RegHandle = (REGHANDLE)0;
    
    return Error;
}
#endif

#ifdef WPP_LOGPAIR_SEPARATOR
# undef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR
#endif

#ifdef WPP_LOGPAIR_SIZET
# undef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET ULONG
#endif

#ifndef EventRegister
#define EventRegister() McGenEventRegister(&, McGenControlCallbackV2, &_Context, &Handle) 
#endif

#ifndef EventUnregister
#define EventUnregister() McGenEventUnregister(&Handle) 
#endif

#define ETW_START EventRegister
#define ETW_STOP EventUnregister

#endif // MCGEN_DISABLE_PROVIDER_CODE_GENERATION


#ifndef MCGEN_DISABLE_PROVIDER_CODE_GENERATION

#ifndef ETW_LOGPAIR
#define ETW_LOGPAIR(_Size, _Addr) WPP_LOGPAIR(_Size, _Addr)
#endif

#define ETW_LOGTYPEVAL(_Type, _Value) ETW_LOGPAIR(sizeof(_Type), &(_Value))
#define ETW_LOGTYPEPTR(_Value) ETW_LOGPAIR(sizeof(*(_Value)), (_Value))

#endif

#define ETW_THIS_FILE queue_cpp

#define ETW_EVAL(_value_) _value_
#define Event(Id) ETW_EVAL(Event) ## ETW_EVAL(Id) ## ETW_EVAL(_) ## ETW_EVAL(ETW_THIS_FILE) ## ETW_EVAL(__LINE__)

#if defined(__cplusplus)
};
#endif

#define MSG_event_10                         0x0000000AL
#define MSG_providermessage                  0x90000001L

#endif


//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef Trace
#define Trace WPP_(CALL)
// MsgArgs

// NoMsgArgs and Etw
